{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/data/constans.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","FeedbackButton","feedback","onLeaveFeedback","type","data-feedback","onClick","FeedbackOptions","options","map","option","FEEDBACK_OPTIONS","Notification","message","Statistics","good","neutral","bad","total","positivePercantage","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedbacks","countPositivePercantage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAiBeA,EAdC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACrB,OACI,oCACI,6BAAKD,IACJC,MCJPC,EAAiB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAClC,OACE,wBAAQC,KAAK,SAASC,gBAAeH,EAAUI,QAASH,EAAxD,SACGD,KAgBQK,EAXS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAClC,OAAOK,EAAQC,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAAgBR,SAAUQ,EAAQP,gBAAiBA,QCb1CQ,EAAmB,CAAC,OAAQ,UAAW,OCWrCC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCgBEC,EAjBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACGD,EAAQ,GACP,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,uDAA0BC,QAGnB,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BC0C7BO,E,4MAlDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,eAAiB,YAAiB,IACxBpB,EADuB,EAAbqB,OACUC,QAApBtB,SACR,EAAKuB,UAAS,SAACC,GAAD,sBAAmBxB,EAAWwB,EAAUxB,GAAY,O,EAGpEyB,oBAAsB,WAAO,IAAD,EACK,EAAKN,MACpC,OAF0B,EAClBN,KADkB,EACZC,QADY,EACHC,K,EAIzBW,wBAA0B,WAAO,IACvBb,EAAS,EAAKM,MAAdN,KACFG,EAAQ,EAAKS,sBACnB,OAAOT,EAAQW,KAAKC,MAAOf,EAAOG,EAAS,KAAO,G,4CAGpD,WAAS,MAEwBa,KAAKV,MAA5BN,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IACjBC,EAAQa,KAAKJ,sBACbR,EAAqBY,KAAKH,0BAChC,OACE,qCACE,cAAC,EAAD,CAAS7B,MAAM,uBAAf,SACE,cAAC,EAAD,CACES,QAASG,EACTR,gBAAiB4B,KAAKT,mBAI1B,cAAC,EAAD,CAASvB,MAAM,aAAf,SACE,cAAC,EAAD,CACEgB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA3Cda,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b9d0d9fb.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({title, children}) => {\n    return(\n        <section>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n}\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\n  return (\n    <button type=\"button\" data-feedback={feedback} onClick={onLeaveFeedback}>\n      {feedback}\n    </button>\n  );\n};\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return options.map((option) => (\n    <FeedbackButton feedback={option} onLeaveFeedback={onLeaveFeedback} />\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","export const FEEDBACK_OPTIONS = [\"good\", \"neutral\", \"bad\"];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport Notification from \"../Notification/Notification\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercantage }) => {\n  return (\n    <>\n      {total > 0 && (\n        <ul>\n          <li>Good: {good}</li>\n          <li>Neutral: {neutral}</li>\n          <li>Bad: {bad}</li>\n          <li>Total: {total}</li>\n          <li>Positive Percantage: {positivePercantage}</li>\n        </ul>\n      )}\n      {total === 0 && <Notification message=\"No Feedback given\" />}\n    </>\n  );\n};\n\nexport default Statistics;\n","import { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport { FEEDBACK_OPTIONS } from \"./components/data/constans\";\nimport Statistics from \"./components/Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState((prevState) => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  countTotalFeedbacks = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositivePercantage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedbacks();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    // console.log(this.state);\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedbacks();\n    const positivePercantage = this.countPositivePercantage();\n    return (\n      <>\n        <Section title=\"Please leavefeedback\">\n          <FeedbackOptions\n            options={FEEDBACK_OPTIONS}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercantage={positivePercantage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}